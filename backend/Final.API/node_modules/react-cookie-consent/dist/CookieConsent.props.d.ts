import React, { ReactNode } from "react";
import { SAME_SITE_OPTIONS } from "./models/constants";
export interface CookieConsentProps {
    children?: ReactNode;
    style?: React.CSSProperties;
    buttonStyle?: React.CSSProperties;
    declineButtonStyle?: React.CSSProperties;
    contentStyle?: React.CSSProperties;
    disableStyles?: boolean;
    hideOnAccept?: boolean;
    hideOnDecline?: boolean;
    onAccept?: (acceptedByScrolling: boolean) => void;
    onDecline?: () => void;
    buttonText?: string | ReactNode | Function;
    declineButtonText?: string | ReactNode | Function;
    cookieName?: string;
    cookieValue?: string | object;
    declineCookieValue?: string | object;
    setDeclineCookie?: boolean;
    debug?: boolean;
    expires?: number;
    containerClasses?: string;
    contentClasses?: string;
    buttonClasses?: string;
    buttonWrapperClasses?: string;
    declineButtonClasses?: string;
    buttonId?: string;
    declineButtonId?: string;
    overlayClasses?: string;
    ariaAcceptLabel?: string;
    ariaDeclineLabel?: string;
    disableButtonStyles?: boolean;
    enableDeclineButton?: boolean;
    flipButtons?: boolean;
    cookieSecurity?: boolean;
    overlay?: boolean;
    acceptOnOverlayClick?: boolean;
    acceptOnScroll?: boolean;
    acceptOnScrollPercentage?: number;
    ButtonComponent?: any;
    extraCookieOptions?: Object;
    overlayStyle?: Object;
    customContentAttributes?: Object;
    customContainerAttributes?: Object;
    customButtonProps?: Object;
    customDeclineButtonProps?: Object;
    customButtonWrapperAttributes?: Object;
    onOverlayClick?: () => void;
    location?: string;
    visible?: string;
    sameSite?: "strict" | "Strict" | "lax" | "Lax" | "none" | "None";
}
export declare const defaultCookieConsentProps: {
    disableStyles: boolean;
    hideOnAccept: boolean;
    hideOnDecline: boolean;
    location: string;
    visible: string;
    onAccept: (_acceptedByScrolling: boolean) => void;
    onDecline: () => void;
    cookieName: string;
    cookieValue: string;
    declineCookieValue: string;
    setDeclineCookie: boolean;
    buttonText: string;
    declineButtonText: string;
    debug: boolean;
    expires: number;
    containerClasses: string;
    contentClasses: string;
    buttonClasses: string;
    buttonWrapperClasses: string;
    declineButtonClasses: string;
    buttonId: string;
    declineButtonId: string;
    extraCookieOptions: {};
    disableButtonStyles: boolean;
    enableDeclineButton: boolean;
    flipButtons: boolean;
    sameSite: SAME_SITE_OPTIONS;
    ButtonComponent: React.FunctionComponent<{
        [x: string]: any;
        children: ReactNode;
    }>;
    overlay: boolean;
    overlayClasses: string;
    onOverlayClick: () => void;
    acceptOnOverlayClick: boolean;
    ariaAcceptLabel: string;
    ariaDeclineLabel: string;
    acceptOnScroll: boolean;
    acceptOnScrollPercentage: number;
    customContentAttributes: {};
    customContainerAttributes: {};
    customButtonProps: {};
    customDeclineButtonProps: {};
    customButtonWrapperAttributes: {};
    style: {};
    buttonStyle: {};
    declineButtonStyle: {};
    contentStyle: {};
    overlayStyle: {};
};
